//Constants
mov r12, #.CharScreen

//Load tape
	mov r0, #message
	str r0, .WriteString
	mov r0, #tape
	str r0, .ReadString

//Run
	mov r0, #0x5E //'^' for head
	strb r0, [r12+24]
	mov r0, #0
	mov r1, #0x41 //'A'
	bl drawTapeAndState
	add r0,r0, #1
	add r1,r1,#1
	cmp r0,#16
	blt .-4
	halt


//r0 contains the position of the head relative to tape (start = 0)
//r1 contains the current state (drawn under head)
drawTapeAndState:
	push {r0-r2}	
	strb r1, [r12 + #40]
	add r1, r0, #tapeHeader
	mov r0, #0
	ldrb r2, [r1 + r0]
	strb r2, [r12 + r0]
	add r0,r0,#1
	cmp r0, #16
	blt .-4
	pop {r0-r2}
	ret

message: .asciz "\n\n\n\n\nEnter start tape"

    tapeHeader: //Half a screen worth of blanks
 11|      .word 0x20202020
 12|      .word 0x20202020
 13|tape: .word 0