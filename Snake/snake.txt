setUp:
mov r12,#0x8000000	
add r5,r12,#272	
sub r0,r5,#1
str r0,body1			
sub r0,r5,#2					
str r0,body0	
mov r2,#0 
mvn r1,#0xff000000
ldr r3,bodyAddr
add r4,r3,#1
mov r6,#768
sub r6,r6,#1
mov r7,#1024
sub r7,r7,#1				// 1023 in r7

apple1:
inp r8,8	// gets a random 32 bit pattern
and r8,r8,r7	// r7 has 1023
cmp r8,r6	// r6 has 767
bgt apple1	// restrict random range
add r8,r8,r12
cmp r8,r9
beq apple1

loop:
inp r0,8	// a random 32 bit pattern
str r0,[r8]	// apple is a random colour

inp r0,4
cmp r0,#87 //W key
beq up
cmp r0,#65 //A key
beq left
cmp r0,#68 //D key
beq right
cmp r0,#83 //S key
beq down

up:
cmp r11,#83
beq down
mov r11,#87
sub r5,r5,#32
cmp r5,r12
blt over
b draw

left:
cmp r11,#68
beq right
mov r11,#65	
sub r5,r5,#1
and r0,r5,#31
cmp r0,#31
beq over
b draw

right:
cmp r11,#65
beq left
mov r11,#68	
add r5,r5,#1
and r0,r5,#31
cmp r0,#0
beq over
b draw

down:
cmp r11,#87
beq up
mov r11,#83
add r5,r5,#32
add r0,r12,r6
cmp r5,r0
bgt over

draw:
str r2,[r5]  

cmp r8,r5 // check if caught apple
beq newApple

mvTail:
ldr r0,[r3]
str r1,[r0]  
add r3,r3,#1

newApple:
inp r8,8				// gets a random 32 bit pattern
and r8,r8,r7				// r7 has 1023
cmp r8,r6				// r6 has 767
bgt newApple				// restrict random range
add r8,r8,r12

mvHead:
str r5,[r4]  
add r4,r4,#1

b loop
	
over: 
halt

bodyAddr: dat body0
body0: dat 0
body1: dat 0